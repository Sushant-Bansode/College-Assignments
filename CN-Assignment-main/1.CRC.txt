// *** JAVA

import java.util.Scanner;
import java.io.*;
public class CRC1 {

    public static void main(String args[]) {

    Scanner sc = new Scanner(System.in);

    //Input Data Stream
    System.out.print("Enter message bits: ");
    String message = sc.nextLine();
    System.out.print("Enter generator: ");
    String generator = sc.nextLine();
int data[] = new int[message.length() + generator.length() - 1];
int divisor[] = new int[generator.length()];
for(int i=0;i<message.length();i++)
	data[i] = Integer.parseInt(message.charAt(i)+"");
for(int i=0;i<generator.length();i++)
	divisor[i] = Integer.parseInt(generator.charAt(i)+"");

//Calculation of CRC
for(int i=0;i<message.length();i++)
{
	if(data[i]==1)
		for(int j=0;j<divisor.length;j++)
			data[i+j] ^= divisor[j];
}

//Display CRC
System.out.print("The checksum code is: ");
for(int i=0;i<message.length();i++)
	data[i] = Integer.parseInt(message.charAt(i)+"");
for(int i=0;i<data.length;i++) 
    System.out.print(data[i]);
System.out.println();

//Check for input CRC code
System.out.print("Enter checksum code: ");
	message = sc.nextLine();
System.out.print("Enter generator: ");
	generator = sc.nextLine();
data = new int[message.length() + generator.length() - 1];
divisor = new int[generator.length()];
for(int i=0;i<message.length();i++)
	data[i] = Integer.parseInt(message.charAt(i)+"");
for(int i=0;i<generator.length();i++)
	divisor[i] = Integer.parseInt(generator.charAt(i)+"");

//Calculation of remainder
for(int i=0;i<message.length();i++) {
	if(data[i]==1)
		for(int j=0;j<divisor.length;j++)
			data[i+j] ^= divisor[j];
}

//Display validity of data
boolean valid = true;
for(int i=0;i<data.length;i++)
	if(data[i]==1){
		valid = false;
		break;
}

if(valid==true) 
	System.out.println("Data stream is valid");
else 
	System.out.println("Data stream is invalid. CRC error occurred.");
}

}

// *** C++

#include <iostream>
#include <string>
using namespace std;

int main() {
    // Input Data Stream
    cout << "Enter message bits: ";
    string message;
    getline(cin, message);
    cout << "Enter generator: ";
    string generator;
    getline(cin, generator);

    int data[message.length() + generator.length() - 1];
    int divisor[generator.length()];
    for (int i = 0; i < message.length(); i++)
        data[i] = message[i] - '0';
    for (int i = 0; i < generator.length(); i++)
        divisor[i] = generator[i] - '0';

    // Calculation of CRC
    for (int i = 0; i < message.length(); i++) {
        if (data[i] == 1) {
            for (int j = 0; j < generator.length(); j++)
                data[i + j] ^= divisor[j];
        }
    }

    // Display CRC
    cout << "The checksum code is: ";
    for (int i = 0; i < message.length(); i++)
        cout << data[i];
    cout << endl;

    // Check for input CRC code
    cout << "Enter checksum code: ";
    getline(cin, message);
    cout << "Enter generator: ";
    getline(cin, generator);

    int data2[message.length() + generator.length() - 1];
    int divisor2[generator.length()];
    for (int i = 0; i < message.length(); i++)
        data2[i] = message[i] - '0';
    for (int i = 0; i < generator.length(); i++)
        divisor2[i] = generator[i] - '0';

    // Calculation of remainder
    for (int i = 0; i < message.length(); i++) {
        if (data2[i] == 1) {
            for (int j = 0; j < generator.length(); j++)
                data2[i + j] ^= divisor2[j];
        }
    }

    // Display validity of data
    bool valid = true;
    for (int i = 0; i < message.length(); i++) {
        if (data2[i] == 1) {
            valid = false;
            break;
        }
    }

    if (valid)
        cout << "Data stream is valid" << endl;
    else
        cout << "Data stream is invalid. CRC error occurred." << endl;

    return 0;
}
